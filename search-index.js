var searchIndex = new Map(JSON.parse('[\
["orbiting_sand",{"doc":"These documents are for game developers to understand the …","t":"CCHCHHFNNNNNNCNNNNNNNNNNNNNNNNCNCCCFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNFNNNNNNNONNNNNNONONNNNNNNNNONONNONONNNNNNFNNNNNNNONNNNNNONONNNNNNNNNONONNONONNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNCNNCNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSFNNNNNNNNNNCNNNNNNNCNNNNNCNCCCCCCCCCPFFGNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPFFPGPPGPNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOPPPPGGFFGFPPPPPGFPPGPPPPPPPPPGGFFGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGFPPPFFPGFPPGFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOCCFSFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNHHHONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNONNNNONNNOONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNFONNNNNNONNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNNNONNNNNCCCCCCCCCFPPKGGFPPPPPPPPPFPPGFPPPMMNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNMNMMNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNCCHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNCCFPPFGNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNOONOONOONNNNNNNNNNNNNNNNNNNNNOFFNNNNNNNNNNNNNONNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNOONNONNNNNNNNNNNNNNCCCCCCPPGPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHFFNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNONNNNNNNNNNNNNNNNONNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNONNNNFFFFFFFFTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNCCFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSFNNNNNNHNNNNNNHNHNNNNNNNNNNNNCCFNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNNNNFFNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNHNONNNNNNNNNNNNNNNONN","n":["entities","gui","main","physics","planet_only_setup","solar_system_setup","EntitiesPluginGroup","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","celestials","deref","deref_mut","downcast","drop","from","from_sample_","init","into","into_any","into_any_arc","into_any_rc","to_sample_","try_from","try_into","type_id","upcast","utils","vzip","celestial","earthlike","sun","CelestialBuilder","CelestialChunkIdk","CelestialData","CelestialDataPlugin","CelestialOutline","CelestialWireframe","FallingSandMaterial","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","celestial_data","celestial_idx","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_ids","component_ids","component_ids","component_ids","component_ids","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw_outline_system","draw_wireframe_system","drop","drop","drop","drop","drop","drop","drop","element_grid_dir","fmt","fmt","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_components","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get_components","get_components","get_components","get_components","get_components","get_element_dir","get_element_dir_mut","gravitational","gravitational","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","name","new","new","process","process_full","process_system","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","translation","translation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","velocity","velocity","vzip","vzip","vzip","vzip","vzip","vzip","vzip","EarthLikeBuilder","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","cell_radius","cell_radius","default","deref","deref_mut","downcast","drop","first_num_radial_lines","first_num_radial_lines","first_num_tangential_chunkss","first_num_tangential_chunkss","from","from_sample_","from_world","init","into","into_any","into_any_arc","into_any_rc","max_concentric_circles_per_chunk","max_concentric_circles_per_chunk","max_radial_lines_per_chunk","max_radial_lines_per_chunk","new","num_layers","num_layers","second_num_concentric_circles","second_num_concentric_circles","to_sample_","try_from","try_into","type_id","upcast","vzip","SunBuilder","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","cell_radius","cell_radius","default","deref","deref_mut","downcast","drop","first_num_radial_lines","first_num_radial_lines","first_num_tangential_chunkss","first_num_tangential_chunkss","from","from_sample_","from_world","init","into","into_any","into_any_arc","into_any_rc","max_concentric_circles_per_chunk","max_concentric_circles_per_chunk","max_radial_lines_per_chunk","max_radial_lines_per_chunk","new","num_layers","num_layers","second_num_concentric_circles","second_num_concentric_circles","to_sample_","try_from","try_into","type_id","upcast","vzip","Radius","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","calc_mesh","clone","clone_into","clone_type_data","component_ids","deref","deref_mut","downcast","drop","fmt","from","from_components","from_sample_","get_components","init","into","into_any","into_any_arc","into_any_rc","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","GuiPluginGroup","GuiUnifiedPlugin","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","brush","build","build","camera","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","element_picker","from","from","from_sample_","from_sample_","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","setup","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","BrushComponent","BrushPlugin","apply_brush_system","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","component_ids","create_brush","deref","deref","deref_mut","deref_mut","downcast","downcast","draw_brush_system","drop","drop","from","from","from_components","from_sample_","from_sample_","get_components","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","move_brush_system","resize_brush_system","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","BackgroundLayer1","CameraPlugin","CelestialIdx","MainCamera","OverlayLayer1","OverlayLayer2","OverlayLayer3","SelectCelestial","add","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","cycle_celestial_focus","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","first_celestial_focus","fmt","fmt","fmt","fmt","fmt","fmt","focus_celestial","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_components","from_components","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","frustum_culling_2d","get_components","get_components","get_components","get_components","get_components","get_components","get_selected_celestial","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","move_camera_system","next","prev","rect_add","rect_overlaps","select_celestial_focus","setup_main_camera","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zoom_camera_system","ElementPickerPlugin","ElementSelection","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","element_picker_system","from","from","from_sample_","from_sample_","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","PHYSICS_FRAME_RATE","PhysicsPluginGroup","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","deref","deref_mut","downcast","drop","fallingsand","from","from_sample_","init","into","into_any","into_any_arc","into_any_rc","orbits","to_sample_","try_from","try_into","type_id","upcast","util","vzip","convolution","data","elements","mesh","util","behaviors","neighbor_grids","neighbor_identifiers","neighbor_indexes","CenterChunk","ElementGridConvolutionNeighbors","ElementGridConvolutionNeighborsIntoIter","GetChunkErr","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chunk_idxs","chunk_idxs_iter","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","fmt","from","from","from","from_sample_","from_sample_","from_sample_","get","get_below_idx_from_center","get_chunk","get_chunk_mut","get_left_right_idx_from_center","grids","grids","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","is_empty","len","multiunzip","new","next","par_bridge","replace","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","BottomNeighborGrids","BottomOfGrid","ChunkDoubling","ChunkDoubling","ConvOutOfBoundsError","ElementGridConvolutionNeighborGrids","LR","LeftRightNeighborGrids","Normal","Normal","TopNeighborGrids","TopOfGrid","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","clone","clone_into","clone_type_data","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_hashmap","from_hashmap","from_hashmap","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get","get_chunk_by_chunk_ijk","get_chunk_by_chunk_ijk","get_chunk_by_chunk_ijk","get_num_concentric_circles","get_num_concentric_circles","get_num_radial_lines","get_num_radial_lines","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_hashmap","left_right","to_hashmap","to_hashmap","to_hashmap","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_smolstr","to_string","top","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","b","bl","bl","br","br","l","r","t","t0","t1","tl","tl","tr","tr","Bottom","Bottom","BottomLeft","BottomLeft","BottomNeighborIdentifier","BottomNeighborIdentifierChunkDoubling","BottomNeighborIdentifierChunkDoublingIter","BottomNeighborIdentifierIter","BottomNeighborIdentifierNormal","BottomNeighborIdentifierNormalIter","BottomRight","BottomRight","Center","ChunkDoubling","ChunkDoubling","ConvolutionIdentifier","ConvolutionIdx","LR","Left","LeftRightNeighborIdentifier","Normal","Normal","Right","Top","Top","Top0","Top1","TopLeft","TopLeft","TopNeighborIdentifier","TopNeighborIdentifierChunkDoubling","TopNeighborIdentifierChunkDoublingIter","TopNeighborIdentifierIter","TopNeighborIdentifierNormal","TopNeighborIdentifierNormalIter","TopRight","TopRight","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","back_idx","back_idx","back_idx","back_idx","back_idx","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","get","get","get","get","get","get","idx","idx","idx","idx","idx","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","iter","iter","iter","iter","iter","iter","len","len","len","len","len","len","marker","marker","marker","marker","marker","marker","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth","nth","nth","par_bridge","par_bridge","par_bridge","par_bridge","par_bridge","par_bridge","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BottomNeighborIdxs","BottomNeighborIdxsIter","BottomOfGrid","ChunkDoubling","ChunkDoubling","ElementGridConvolutionNeighborIdxs","ElementGridConvolutionNeighborIdxsIter","LR","LeftRightNeighborIdxs","LeftRightNeighborIdxsIter","Normal","Normal","TopNeighborIdxs","TopNeighborIdxsIter","TopOfGrid","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","bottom_neighbors_iter","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","contains","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","hash","hash","hash","hash","index","index","index","index","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","iter","iter","iter","iter","left_right","left_right_neighbors_iter","lr","next","next","next","next","par_bridge","par_bridge","par_bridge","par_bridge","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","top","top","top_neighbors_iter","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","b","bl","bl","br","br","l","r","t","t0","t1","tl","tl","tr","tr","element_directory","element_grid","ElementGridDir","FRAMES_PER_FULL_PROCESS","Parallel","ProcessTargets","Sequential","Textures","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc_total_mass","calculate_ith_has_different_k_bottom_neighbor_targets","calculate_ith_has_single_bottom_neighbor_targets","calculate_ith_standard_convolution_targets","chunks","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","coords","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","get_chunk_bottom_neighbors","get_chunk_by_chunk_ijk","get_chunk_by_chunk_ijk_mut","get_chunk_left_right_neighbors","get_chunk_neighbors","get_chunk_top_neighbors","get_coordinate_dir","get_element","get_num_chunks","get_textures","get_textures_filtered","get_total_mass","get_total_num_cells","get_unprocessed_chunk_idxs","get_updated_target_textures","has_multi_bottom_neighbor","has_single_bottom_neighbor","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","len","new_checkerboard","new_empty","package_convolutions","package_coordinate_neighbors","pregen_process_targets","process","process_count","process_full","process_parallel","process_sequence","process_single_chunk","process_targets","recalculate_everything","recalculate_total_mass","set_element","standard_convolution","texture","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","total_mass","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unlock_all_chunks","unpackage_convolution","unpackage_convolutions","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","ElementGrid","already_processed","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","checked_get","coords","default","deref","deref_mut","downcast","drop","fill","from","from_sample_","from_world","get","get_already_processed","get_chunk_coords","get_grid","get_last_set","get_mut","get_process_unneeded","get_texture","get_total_mass","grid","init","into","into_any","into_any_arc","into_any_rc","last_set","new_empty","new_filled","process","process_elements","process_mass","replace","set","set_already_processed","set_already_processed_deduplicated","to_sample_","total_mass","try_from","try_into","type_id","upcast","vzip","element","fliers","lava","movement","sand","solarplasma","stone","vacuum","water","Density","DoNothing","DownFlier","Element","ElementTakeOptions","ElementType","ElementTypeIter","Empty","Gas","Lava","LeftFlier","Liquid","PutBack","ReplaceWith","RightFlier","Sand","SetHeatOnZeroSpecificHeatError","SolarPlasma","Solid","StateOfMatter","StateOfMatterIter","Stone","Vacuum","Water","_process","_set_last_processed","add","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","back_idx","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","box_clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","from_world","from_world","from_world","from_world","get","get","get_color","get_density","get_element","get_last_processed","get_mass","get_state_of_matter","get_type","hash","hash","idx","idx","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","iter","iter","len","len","marker","marker","mass","matrix_mass","next","next","next_back","next_back","nth","nth","par_bridge","par_bridge","partial_cmp","partial_cmp","process","size_hint","size_hint","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_swap_me","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","down","left","right","DownFlier","_process","_set_last_processed","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","box_clone","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_world","get_color","get_density","get_last_processed","get_state_of_matter","get_type","init","into","into_any","into_any_arc","into_any_rc","last_processed","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","LeftFlier","_process","_set_last_processed","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","box_clone","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_world","get_color","get_density","get_last_processed","get_state_of_matter","get_type","init","into","into_any","into_any_arc","into_any_rc","last_processed","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","RightFlier","_process","_set_last_processed","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","box_clone","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_world","get_color","get_density","get_last_processed","get_state_of_matter","get_type","init","into","into_any","into_any_arc","into_any_rc","last_processed","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","Lava","_process","_set_last_processed","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","box_clone","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_world","get_color","get_density","get_last_processed","get_state_of_matter","get_type","init","into","into_any","into_any_arc","into_any_rc","last_processed","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","fluid","solid","fluid_process","solid_process","Sand","_process","_set_last_processed","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","box_clone","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_world","get_color","get_density","get_last_processed","get_state_of_matter","get_type","init","into","into_any","into_any_arc","into_any_rc","last_processed","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","SolarPlasma","_process","_set_last_processed","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","box_clone","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_world","get_color","get_density","get_last_processed","get_state_of_matter","get_type","init","into","into_any","into_any_arc","into_any_rc","last_processed","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","Stone","_process","_set_last_processed","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","box_clone","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_world","get_color","get_density","get_last_processed","get_state_of_matter","get_type","init","into","into_any","into_any_arc","into_any_rc","last_processed","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","Vacuum","_process","_set_last_processed","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","box_clone","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_world","get_color","get_density","get_last_processed","get_state_of_matter","get_type","init","into","into_any","into_any_arc","into_any_rc","last_processed","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","Water","_process","_set_last_processed","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","box_clone","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_world","get_color","get_density","get_last_processed","get_state_of_matter","get_type","init","into","into_any","into_any_arc","into_any_rc","last_processed","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","chunk_coords","coordinate_directory","ChunkCoords","Grid","Lines","PartialLayerChunkCoordsBuilder","VertexMode","absolute_cell_idx_to_in_chunk_cell_idx","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","calc_chunk_meshdata","calc_chunk_outline","calc_chunk_triangle_wireframe","cell_radius","cell_width","chunk_idx","chunk_idx","chunk_idx","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","contains","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","end_radial_line","end_radial_line","end_radial_line","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_world","from_world","get_bounding_box","get_cell_width","get_chunk_idx","get_end_concentric_circle_absolute","get_end_concentric_circle_layer_relative","get_end_radial_line","get_end_radius","get_end_theta","get_external_coord_from_internal_coord","get_indices","get_internal_coord_from_external_coord","get_layer_num","get_num_concentric_circles","get_num_radial_lines","get_outline","get_positions","get_start_concentric_circle_absolute","get_start_concentric_circle_layer_relative","get_start_radial_line","get_start_radius","get_start_theta","get_uvs","get_vertices","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","layer_num_radial_lines","layer_num_radial_lines","layer_num_radial_lines","new","num_concentric_circles","num_concentric_circles","num_concentric_circles","rel_pos_to_cell_idx","start_concentric_circle_absolute","start_concentric_circle_absolute","start_concentric_circle_absolute","start_concentric_circle_layer_relative","start_concentric_circle_layer_relative","start_concentric_circle_layer_relative","start_radial_line","start_radial_line","start_radial_line","to_owned","to_owned","to_sample_","to_sample_","to_sample_","total_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","width","CoordinateDir","CoordinateDirBuilder","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","cell_idx_to_chunk_idx","cell_radius","cell_radius","clone","clone_into","clone_type_data","convert_absolute_concentric_circle_to_relative","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","first_num_radial_lines","first_num_radial_lines","first_num_tangential_chunkss","first_num_tangential_chunkss","from","from","from_sample_","from_sample_","from_world","get_cell_width","get_chunk_at_idx","get_chunk_bounding_box","get_chunk_end_radius","get_chunk_end_theta","get_chunk_num_concentric_circles","get_chunk_num_radial_lines","get_chunk_start_radius","get_chunk_start_theta","get_core_chunks","get_layer_and_chunk_num_from_absolute_concentric_chunk","get_layer_chunk_num_concentric_circles","get_layer_chunk_num_radial_lines","get_layer_end_radius","get_layer_num_concentric_chunks","get_layer_num_concentric_circles","get_layer_num_radial_lines","get_layer_num_tangential_chunkss","get_layer_start_concentric_circle_absolute","get_layer_start_radius","get_num_chunks","get_num_layers","get_partial_chunks","get_radius","get_total_number_concentric_chunks","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","max_concentric_circles_per_chunk","max_concentric_circles_per_chunk","max_radial_lines_per_chunk","max_radial_lines_per_chunk","new","num_layers","num_layers","partial_chunks","rel_pos_to_cell_idx","second_num_concentric_circles","second_num_concentric_circles","to_owned","to_sample_","to_sample_","total_size","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","enums","functions","grid","image","mesh","vectors","Combine","FrustumCull","MeshDrawMode","Outline","TexturedMesh","TriangleWireframe","ZoomDrawMode","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","from","from","from_sample_","from_sample_","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","grid_iter","interpolate_points","is_pow_2","modulo","valid_step","Grid","GridOutOfBoundsError","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","checked_get","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","filter_vecgrid","fmt","fmt","from","from","from_sample_","from_sample_","get","get_data","get_data_slice","get_height","get_mut","get_width","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_iter","into_iter","iter","iter_mut","new_empty","new_fill","new_from_vec","replace","set","to_owned","to_owned","to_sample_","to_sample_","to_smolstr","to_string","total_size","transform_jk_coord_to_ndarray","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","RawImage","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","bounds","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","from","from_sample_","from_world","init","into","into_any","into_any_arc","into_any_rc","pixels","to_bevy_image","to_owned","to_sample_","try_from","try_into","type_id","upcast","vzip","GizmoDrawableLoop","GizmoDrawableTriangles","MeshBoundingBox","OwnedMeshData","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc_bounds","clone","clone_into","clone_type_data","color","color","component_ids","component_ids","component_ids","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","draw_bevy_gizmo_line","draw_bevy_gizmo_loop","draw_bevy_gizmo_triangles","drop","drop","drop","drop","from","from","from","from","from_components","from_components","from_components","from_sample_","from_sample_","from_sample_","from_sample_","from_world","get_components","get_components","get_components","indices","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","load_bevy_mesh","mesh","mesh","new","new","new","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vertices","vzip","vzip","vzip","vzip","ChunkIjkVector","FullIdx","IjkVector","JkVector","NdArrayCoords","RelJkVector","TempJkVector","Vertex","ZERO","ZERO","ZERO","ZERO","add","add","add_assign","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_idx","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","color","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_world","get_x","get_y","hash","hash","hash","hash","hash","hash","hash","i","i","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","j","j","j","j","k","k","k","k","new","new","new","new","new","new","pos","position","rj","rk","sub","sub_assign","to_jk_vector","to_jk_vector","to_jk_vector","to_ndarray_coords","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uv","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","components","nbody","Area","Force","ForceVec","GravitationalAcceleration","GravitationalField","Length","Mass","Velocity","add","add","add","add","add_assign","add_assign","add_assign","add_assign","area","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_mass","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_total_mass","from_world","from_world","from_world","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","G","MIN_DISTANCE_SQUARED","NBodyPlugin","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","compute_gravitational_force","deref","deref_mut","downcast","drop","from","from_sample_","full_position_update","grav_bodies_system","half_step_velocity_update","init","into","into_any","into_any_arc","into_any_rc","no_grav_bodies_system","to_sample_","try_from","try_into","type_id","upcast","vzip","clock","vectors","Clock","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","frame","from","from_sample_","from_world","get_current_frame","get_current_time","get_last_delta","init","into","into_any","into_any_arc","into_any_rc","new","time","to_owned","to_sample_","try_from","try_into","type_id","upcast","update","vzip","RelXyPoint","Vertex","add","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","color","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","fmt","fmt","fmt","from","from","from_sample_","from_sample_","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","mouse_coord_to_world_coord","new","position","sub","to_owned","to_owned","to_sample_","to_sample_","to_smolstr","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","uv","vzip","vzip"],"q":[[0,"orbiting_sand"],[6,"orbiting_sand::entities"],[32,"orbiting_sand::entities::celestials"],[35,"orbiting_sand::entities::celestials::celestial"],[242,"orbiting_sand::entities::celestials::earthlike"],[283,"orbiting_sand::entities::celestials::sun"],[324,"orbiting_sand::entities::utils"],[356,"orbiting_sand::gui"],[408,"orbiting_sand::gui::brush"],[463,"orbiting_sand::gui::camera"],[703,"orbiting_sand::gui::element_picker"],[753,"orbiting_sand::physics"],[781,"orbiting_sand::physics::fallingsand"],[786,"orbiting_sand::physics::fallingsand::convolution"],[790,"orbiting_sand::physics::fallingsand::convolution::behaviors"],[879,"orbiting_sand::physics::fallingsand::convolution::neighbor_grids"],[1027,"orbiting_sand::physics::fallingsand::convolution::neighbor_grids::BottomNeighborGrids"],[1032,"orbiting_sand::physics::fallingsand::convolution::neighbor_grids::LeftRightNeighborGrids"],[1034,"orbiting_sand::physics::fallingsand::convolution::neighbor_grids::TopNeighborGrids"],[1041,"orbiting_sand::physics::fallingsand::convolution::neighbor_identifiers"],[1563,"orbiting_sand::physics::fallingsand::convolution::neighbor_indexes"],[1844,"orbiting_sand::physics::fallingsand::convolution::neighbor_indexes::BottomNeighborIdxs"],[1849,"orbiting_sand::physics::fallingsand::convolution::neighbor_indexes::LeftRightNeighborIdxs"],[1851,"orbiting_sand::physics::fallingsand::convolution::neighbor_indexes::TopNeighborIdxs"],[1858,"orbiting_sand::physics::fallingsand::data"],[1860,"orbiting_sand::physics::fallingsand::data::element_directory"],[2038,"orbiting_sand::physics::fallingsand::data::element_grid"],[2088,"orbiting_sand::physics::fallingsand::elements"],[2097,"orbiting_sand::physics::fallingsand::elements::element"],[2376,"orbiting_sand::physics::fallingsand::elements::fliers"],[2379,"orbiting_sand::physics::fallingsand::elements::fliers::down"],[2418,"orbiting_sand::physics::fallingsand::elements::fliers::left"],[2457,"orbiting_sand::physics::fallingsand::elements::fliers::right"],[2496,"orbiting_sand::physics::fallingsand::elements::lava"],[2535,"orbiting_sand::physics::fallingsand::elements::movement"],[2537,"orbiting_sand::physics::fallingsand::elements::movement::fluid"],[2538,"orbiting_sand::physics::fallingsand::elements::movement::solid"],[2539,"orbiting_sand::physics::fallingsand::elements::sand"],[2578,"orbiting_sand::physics::fallingsand::elements::solarplasma"],[2617,"orbiting_sand::physics::fallingsand::elements::stone"],[2656,"orbiting_sand::physics::fallingsand::elements::vacuum"],[2695,"orbiting_sand::physics::fallingsand::elements::water"],[2734,"orbiting_sand::physics::fallingsand::mesh"],[2736,"orbiting_sand::physics::fallingsand::mesh::chunk_coords"],[2877,"orbiting_sand::physics::fallingsand::mesh::coordinate_directory"],[2975,"orbiting_sand::physics::fallingsand::util"],[2981,"orbiting_sand::physics::fallingsand::util::enums"],[3042,"orbiting_sand::physics::fallingsand::util::functions"],[3047,"orbiting_sand::physics::fallingsand::util::grid"],[3124,"orbiting_sand::physics::fallingsand::util::image"],[3156,"orbiting_sand::physics::fallingsand::util::mesh"],[3277,"orbiting_sand::physics::fallingsand::util::vectors"],[3612,"orbiting_sand::physics::orbits"],[3614,"orbiting_sand::physics::orbits::components"],[3891,"orbiting_sand::physics::orbits::nbody"],[3922,"orbiting_sand::physics::util"],[3924,"orbiting_sand::physics::util::clock"],[3961,"orbiting_sand::physics::util::vectors"],[4029,"bevy_ecs::system::commands"],[4030,"bevy_render::mesh::mesh"],[4031,"bevy_asset::assets"],[4032,"bevy_ecs::change_detection"],[4033,"bevy_sprite::mesh2d::color_material"],[4034,"bevy_ecs::entity"],[4035,"bevy_ecs::query::filter"],[4036,"bevy_ecs::system::query"],[4037,"bevy_asset::server"],[4038,"bevy_ecs::change_detection"],[4039,"bevy_render::texture::image"],[4040,"bevy_render::render_asset"],[4041,"bevy_app::plugin_group"],[4042,"alloc::boxed"],[4043,"alloc::sync"],[4044,"alloc::rc"],[4045,"core::result"],[4046,"core::any"],[4047,"bevy_app::app"],[4048,"bevy_reflect::type_registry"],[4049,"bevy_ecs::component"],[4050,"bevy_ecs::storage"],[4051,"bevy_ecs::component"],[4052,"bevy_gizmos::gizmos"],[4053,"bevy_transform::components::transform"],[4054,"bevy_render::view::visibility"],[4055,"core::fmt"],[4056,"core::fmt"],[4057,"bevy_ecs::component"],[4058,"hashbrown::map"],[4059,"bevy_hierarchy::components::parent"],[4060,"bevy_asset::handle"],[4061,"bevy_time::time"],[4062,"bevy_core"],[4063,"glam::f32::vec2"],[4064,"bevy_ecs::world"],[4065,"bevy_input::mouse"],[4066,"bevy_input::input"],[4067,"bevy_core_pipeline::core_2d::camera_2d"],[4068,"bevy_ecs::query::filter"],[4069,"bevy_window::event"],[4070,"bevy_ecs::event"],[4071,"bevy_input::keyboard"],[4072,"bevy_picking_core::events"],[4073,"bevy_picking_core::events"],[4074,"bevy_transform::components::global_transform"],[4075,"bevy_render::view::visibility"],[4076,"bevy_math::rects::rect"],[4077,"bevy_input::mouse"],[4078,"rayon::iter::par_bridge"],[4079,"smol_str"],[4080,"bevy_utils::label"],[4081,"core::hash"],[4082,"hashbrown::set"],[4083,"core::clone"],[4084,"core::default"],[4085,"core::cmp"],[4086,"bevy_render::color"],[4087,"ndarray::aliases"],[4088,"core::slice::iter"],[4089,"core::slice::iter"],[4090,"core::time"]],"d":["This module contains all the top level bundles. These are …","This module contains all the GUI related code. Things that …","Create the bevy app","This module contains all the physics related code.","Creates just a planet","Creates a solar system with a sun, earth, and a bunch of …","","","","","","","","Celestials are bodies that have gravity and polar meshes …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Celestial entities and their data A celestial is a large …","","","Create a celestial using a builder pattern","A component that represents a chunk by its index in the …","Acts as a cache for a polar mesh’s meshes and textures","A plugin that adds the CelestialData system","Identifies the mesh which draws the celestials chunk …","Identifies the mesh which draws the celestial cell …","Put this alongside the mesh that represents the falling …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the celestial","A component that wraps the element directory","The index of the celestial (0 to n), used for camera …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw the outline of the celestials chunks","Draw the wireframe of the celestials cells","","","","","","","","The elements in this celestial","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Retrieves the element directory","Retrieves the element directory mutably","Set the gravitational field of the celestial","Whether the celestial has a gravitational field","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The name of the celestial","Create a new celestial builder","Creates a new CelestialData","Something to call every frame This calculates only 1/9th …","Something to call every frame This is the same as process, …","Run this system every frame to update the celestial","","","","","","","","","","Set the translation of the celestial","The starting position of the celestial","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the velocity of the celestial","The starting velocity of the celestial","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Radius for circular entities","","","","","","Calculate the mesh for the circle described by the radius","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The brush is a circle that can be resized and moved around …","","","The bevy camera for the game","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Identifies the brush","The brush is a circle that can be resized and moved around …","Based on the brush radius and the celestial cell size, …","","","","","","","","","","","","","Create the brush","","","","","","","Draw the brush circle","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Move the brush with the mouse","Resize the brush with + and -","","","","","","","","","","","","","A layer behind the game. Z-index = -1","The plugin for the camera system","A component that allows us to enumerate over all the …","Used to help identify our main camera","A layer in front of the game. Z-index = 1","A layer in front of the game. Z-index = 2","A layer in front of the game. Z-index = 3","An event that indicates that a celestial has been selected …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the camera plugin","","","","","","","","","","","","","If you press “[” or “]”, you can cycle through the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Same as the above, but for when the camera doesn’t have …","","","","","","","Parent the camera to the celestial","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a click event into a SelectCelestial event by …","","","","","","","","","","","","","","","","","","","Don’t render entities that are not in the camera’s …","","","","","","","Returns the selected celestials index","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Move the camera based on keyboard input","Gets the next index","Gets the previous index","Add a vector to every corner of a rectangle","Check if two rectangles overlap","If the celestial is clicked on:","Setup the main camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zoom the camera based on mouse wheel scroll","This is a gui window that lets you select an element to …","A window used to select an element to place","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","The number of physics frames per second.","","","","","","","","","","","","Falling sand physics engine. Relates to creating planets …","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Orbits and orbital mechanics physics engine.","","","","","","Mostly reimplementations and specific wrappers around …","","The convolution module contains the logic for getting …","The data module contains the data structures for the …","This module contains all the elements that are used in the …","The mesh module contains the wireframe layout of a …","Useful functions and structs for fallingsand calculations.","Element Behavior API","Actual data storage types for the convolution","Identifiers for the different locations chunks can be in …","Indexes in ChunkIjkVectors for all the neighbors of a chunk","You aren’t allowed to get the center chunk. As …","This is the main struct exported by this module It …","Iteration We are going to implement into interation on the …","Errors for the getter methods","","","","","","","","","","","","","","","","The indexes of the neighbors, tells you where they come …","The iterator for the neighbor indexes","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get the element at the given index","Gets the element n cells below the position in the target …","Get the chunk identified by the given identifier","TODO, use macros to get rid of redundancy","Positive k is left, counter clockwise Negative k is right, …","The grids of the neighbors, actually stores the data","The grids of the neighbors","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Checks if there are no chunks","Get the number of chunks","","Create a new ElementGridConvolutionNeighbors","","","Replace the element at the given index Great for taking …","","","","","","","","","","","","","","","","","","","Bottom neighbor grids in the convolution Check out the …","No more chunks below you","Indicates a <strong>chunk doubling</strong> layer transition","Indicates a <strong>chunk doubling</strong> layer transition One of these …","Defines when the user has simply exceeded the bounds of …","The main type exported by this module Contains all the …","The left and right elements TODO: Unecessary to have a …","Left and Right neighbor grids in the convolution Check out …","Indicates that there are the same number of chunks above …","Indicates that there are the same number of chunks below …","Top neighbor grids in the convolution Check out the …","No more chunks above you","","","","","","","","","","","","","","","","","","","","","","","","","","The bottom neighbor grids","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a hashmap into a LeftRightNeighborGrids","Converts a hashmap into a TopNeighborGrids","Converts a hashmap into a BottomNeighborGrids","","","","","","Gets the element at the given index Returns an error if …","Gets the chunk at the given chunk index","Gets the chunk at the given chunk index","Gets the element at the given index","Gets the number of concentric circles in the top layer of …","Gets the number of concentric circles in the bottom layer …","Gets the number of radial lines in the top layer of the …","Gets the number of radial lines in the bottom layer of the …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Converts the ElementGridConvolutionNeighborGrids into a …","The left and right neighbor grids","Converts the LeftRightNeighborGrids into a hashmap","Converts the TopNeighborGrids into a hashmap","Converts the BottomNeighborGrids into a hashmap","","","","","","","","","The top neighbor grids","","","","","","","","","","","","","","","","","","","","","","","","","","Bottom element","Bottom left element","Bottom left element","Bottom right element","Bottom right element","The left element","The right element","Top element","First top center element, right of center","Second top center element, left of center","Top left element","Top left element","Top right element","Top right element","The bottom neighbors","The bottom neighbor","The bottom left neighbor","The bottom left neighbor","Identifies a chunk is one of the bottom neighbors in the …","Identifies a <strong>chunk doubling</strong> layer transition (or halfing …","An iterator over the variants of …","An iterator over the variants of BottomNeighborIdentifier","Identifies that the bottom neighbor is not part of a chunk …","An iterator over the variants of …","The bottom right neighbor","The bottom right neighbor","The center","Indicates a <strong>chunk doubling</strong> layer transition","Indicates a <strong>chunk doubling</strong> layer transition In this case …","The main type exported by this module An enum that …","Identifies a coordinate on an element grid, and then …","The left and right neighbors","The left neighbor","Identifies a chunk is the left or right neighbor in the …","Indicates the top neighbors are not part of a chunk …","Indicates the bottom neighbors are not part of a chunk …","The right neighbor","The top neighbors","The top neighbor","Second top center element, right of center","Second top center element, left of center","The top left neighbor","The top left neighbor","Identifies a chunk is one of the top neighbors in the …","Identifies a <strong>chunk doubling</strong> layer transition","An iterator over the variants of …","An iterator over the variants of TopNeighborIdentifier","Identifies that the bottom neighbor is not part of a chunk …","An iterator over the variants of …","The top right neighbor","The top right neighboreturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeottom neighbor indexes in the convolution Check out the …","An iterator for the bottom neighbor indexes","Indicates that you are at the bottom of the grid","Indicates a <strong>chunk doubling</strong> layer transition","Indicates a <strong>chunk doubling</strong> layer transition One of these …","The main type exported by this module Contains all the …","An iterator for the neighbor indexes","The left and right elements TODO: Unecessary to have a …","Left and Right neighbor indexes in the convolution Check …","An iterator for the left and right neighbor indexes","Indicates that there are the same number of chunks above …","Indicates that there are the same number of chunks below …","Top neighbor indexes in the convolution Check out the …","An iterator for the top neighbor indexes","Indicates that you are at the top of the grid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether or not there are bottom neighbors","Bottom neighbor indexes","The iterator for the bottom neighbor indexes","","","","","","","","","","","","","Check if the given ChunkIjkVector is contained in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","The current index","The current index","The current index","The current index","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the iterator for the neighbor indexes","Get the iterator for the left and right neighbor indexes","Get the iterator for the top neighbor indexes","Get the iterator for the bottom neighbor indexes","Left and Right neighbor indexes","The iterator for the left and right neighbor indexes","Whether or not there are left and right neighbors TODO: …","","","","","","","","","","","","","","","","","","","","","Whether or not there are top neighbors","Top neighbor indexes","The iterator for the top neighbor indexes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bottom chunk","The bottom left chunk","The bottom left chunk","The bottom right chunk","The bottom right chunk","Left element","Right element","Top center element","First top center element, right of center","Second top center element, left of center","Top left element","Top left element","Top right element","Top right element","","","An element grid directory is like a coordinate directory, …","The number of frames it takes to fully process the …","Useful for indicating at compile time that an iterable …","Each “item” in this struct gets generated by the …","Useful for indicating at compile time that an iterable …","A struct of textures for use in rendering These are …","","","","","","","","","","","","","","","","","","","","","","","","","","Calculate the maximum temperature in the directory","This calculates the targets for the edge case where the …","This really only calculates the core now TODO: Maybe …","This calculates the convolution targets you would get by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Get the maximum temperature in the directory Gets the …","Gets the chunk at the given index mutably Errors if it is …","","","","","","Get the number of chunks from the coordinate directory","Get all textures","Where filter is true, get the textures","Get the total mass of the directory","","Using the already_processed flag, get all the chunks that …","Gets the textures of the targets updated in the last call …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Pre calculate all the chunk idx’s we need to process …","Do one iteration of processing on the grid There are four …","","Run process FRAMES_PER_FULL_PROCESS times","","","Process a single chunk and its neighbors, mostly used for …","","Recalculates all the saved values","Recalculate the total mass of the directory","","","The actual texture of the elements","","","","","","","","","","","","","","","","","","","","","","","","","Sets the already_processed flag to false for all chunks","The reverse of the package_convolutions function Puts the …","Unpackages more than one convolution at a time","","","","","","","","","","","An element grid is a 2D grid of elements tied to a chunk","The minimum temperature in the chunk that is not 0 The …","","","","","","","","","","","","","Fill the grid with the given element","Returns the argument unchanged.","","","","","","","","","Get the maximum temperature in the directory Calculate the …","Draw the texture as the color of each element","Does not calculate the total mass, just gets the set value …","","","Calls <code>U::from(self)</code>.","","","","This deals with whether or not the element grid needs to …","Creates a new element grid with the given chunk coords and …","Creates a new element grid with the given chunk coords and …","Do one iteration of processing on the grid","Run each elements process method","Process the heat of the grid Currently disabled as it is …","","","","Sets the already processed flag and errors if it is set to …","","Some low resolution data about the world","","","","","","This module contains the trait Element and associated types","","","Movement of elements in the world. Useful for common or …","","","","","","The density of the element relative to the cell width In …","","","This is the trait that all elements must implement","What to do after process is called on the elementgrid The …","Allows you to match on the type of element each element …","An iterator over the variants of ElementType","","","","","","","","","","If something has 0 heat capacity or specific heat, you …","","","","An iterator over the variants of StateOfMatter","","","","This is the private process method to be implemented by …","Set the last time the element was processed No need to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is the way we implement clone for a trait object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","This gets the color of the element Always constant and …","This gets the density of the element relative to the …","This gets the default element of the type","This gets the last time the element was processed Useful …","This gets the mass of the element based on the density and …","This gets the state of matter of the element","This gets the type of the element Converts between the …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This gets the mass of the element based on the cell_width","This gets the mass of the element based on the cell_width …","","","","","","","","","","","This is the “public” process method, that calls the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Instructs the loop to swap the element with the element at …","","","","","","","","","","","","","","","","","","","","","","Fliers are debug elements that just go up down left right","","","Literally nothing","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Literally nothing","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Literally nothing","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","The movement of fluids","The movement of solids","Default fluid behavior","Default solid element behavior","Literally nothing","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Literally nothing","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Literally nothing","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Literally nothing","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Literally nothing","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The CoordinateDir layouts the chunks in the game.","This is a chunk that represents a “full” layer. It …","","","","The optimal way of drawing the vertexes is just to draw …","Convert a cell coordinate “on the circle” to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks to see if an absolute position around the circle is …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Gets the min and max positions in raw x, y of the chunk","","","","","","","","Converts a coordinate from inside this chunk to a …","","Converts a coordinate from anywhere on the circle, …","","","","Similar to get_circle_vertexes, but the j index just …","","","","","","","Gets the UV coordinates of the vertexes of the chunk This …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Defaults to first layer defaults","","","","Converts a position relative to the origin of the circle …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A structure that contains all the chunk coordinates for a …","A builder for CoordinateDir Needs more parameters than …","","","","","","","","","","","builds a CoordinateDir by iterating over the number of …","","The radius of each cell in the circle","","","","","Returns: (layer_num, relative_concentric_circle)","","","","","","","","","","The number of radial lines in the core. Each future layer …","","The number of tangential chunkss in the core. The core …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Cell radius is constant for all chunks","","","","","","","","","Get the core chunk coordinates, useful for getting its …","Useful if you want to count in chunk concentric circles …","Get the height of all the chunks in a given layer","Get the widtch of all the chunks in a given layer","Gets the ending radius of an entire layer","Get the number of chunks in the radial dimension in a …","The number of concentric circles in a given layer Always …","The number of radial lines in a given layer Always 2x the …","Get the number of chunks around the circle in a given layer","The first concentric circle (absolute) index of a given …","Gets the starting radius of an entire layer","The total number of chunks in the directory","The number of layers in the circle","Useful for getting all the partial chunks, useful for …","Gets the radius of the entire coordinate directory","Gets the total number of chunks you would encounter if you …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","If the number of concentric circles in a chunk exceeds …","","If the number of radial lines in a chunk exceeds this …","","Start here","The number of layers in the circle","","Layers on top of the core Every index in the vec …","Converts a position relative to the origin of the circle …","The number of concentric circles in the second layer. Each …","","","","","The total number of cells in the whole directory","","","","","","","","","","","","","A simple 2d grid type This was originally created seperate …","Image utilities I found it useful to write my own image …","Mesh utilities I found it useful to write my own mesh …","A collection of coordinate types and their conversions …","","","The different ways to draw a mesh","","","","How to draw the mesh to, in the future, be handled by zoom …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","This is like the “skip” method but it always keeps the …","Finds a point halfway between two points","Tests if a number is a power of 2 I found it’s important …","A modulo that works for negative numbers","Tests if a step is valid for a grid_iter A valid step is …","A simple 2d grid type","Defines when the user has simply exceeded the bounds of …","","","","","","","","","","","Gets the value at the given coordinate, or returns an …","","","","","","","","","","","","","","","Where filter is true, get the textures","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Gets the value at the given coordinate","Get the data as an ndarray","Get the data as a slice","Get the height of the grid","Gets the value at the given coordinate, mutably","Get the width of the grid","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Get an iterator over the grid","Get a mutable iterator over the grid","Create a new grid with the given width and height, and …","Create a new grid filled with one value","Create a new grid with the given width and height, and …","Like set, but gives you ownership of the original value","Sets the value at the given coordinate, overwriting the …","","","","","","","Get the total size of the grid","Transforms the coordinate to the ndarray coordinate system …","","","","","","","","","","","Representing a raw RGBA image Game engine agnostic, full …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Convert to a bevy image Load this into an asset server to …","","","","","","","","A mesh that can be drawn using bevy’s gizmos (immediate …","A mesh that can be drawn using bevy’s gizmos (immediate …","Useful for frustum culling The bounding box of the mesh to …","Represents a mesh that is owned by this object For some …","","","","","","","","","","","","","","","","","","","","","Get the uv bounds of a list of vertices","","","","The color to draw the mesh","The color to draw the mesh","","","","","","","","","","","","","","","","","Simply draws a line from an index to another but applies …","Draws the mesh using bevy’s gizmos, which is an …","Draws the mesh using bevy’s gizmos, which is an …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","The indices of the mesh, relating to the vertices","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Loads the mesh into bevy’s asset system and returns a …","The mesh to draw","The mesh to draw","Create a new GizmoDrawableLoop","Create a new GizmoDrawableTriangles","Create a new OwnedMeshData object","","","","","","","","","","","","","","","","","","","","","","The vertices of the mesh","","","","","The IjkVector of a chunk within an …","Defines both the chunk and the internal idx of the element","Same as JkVector, but with i indicating the “layer number…","My personal coordinate type for the circular grids …","A coordinate system for ndarray ndarray is row-major, so …","This defines a movement or a vector relative to some …","Sometimes while resolving a relative JkVector into a …","A vertex in a mesh Originally from ggez TODO: move to bevy…","The zero vector","The zero vector","The zero vector","The zero vector","","Add a RelJkVector to a JkVector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The chunk index","","","","","","","","","","","","","","","","","","","","","","","","","The color of the vertex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Get the column index","Get the row index","","","","","","","","The i coordinate, as in the layer number, the core is 0","The i coordinate, as in the layer number, the core is 0","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The j coordinate, as in the radial dimension, towards the …","The j coordinate, as in the radial dimension, towards the …","The j coordinate, as in the radial dimension, towards the …","The j coordinate, as in the radial dimension, towards the …","The k coordinate, as in the tangential dimension, positive …","The k coordinate, as in the tangential dimension, positive …","The k coordinate, as in the tangential dimension, positive …","The k coordinate, as in the tangential dimension, positive …","Create a new NdArrayCoords","Create a new JkVector","Create a new RelJkVector","Create a new FullIdx","Instantiation","Instantiation","The position of an element within a chunk","The position of the vertex","The relative j coordinate, as in the radial dimension, …","The relative k coordinate, as in the tangential dimension, …","","","Convert to a JkVector ndarray is row-major, so the jk …","Convert to a JkVector","Convert to a JkVector","Convert to a NdArrayCoords","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The texture coordinates of the vertex","","","","","","","","","Most of the units of measure as well as bevy components …","The math functions for orbits and orbital mechanics.","An area in square meters.","The scalar force applied to an entity in Newtons $N$","The force applied to an entity with its direction $\\\\vec{N}$","The acceleration due to gravity","Indicates that an entity emits a gravitational field.","A length in meters.","The mass of an entity in kilograms.","The velocity of an entity in meters per second.","","","","","","","","","Returns the area of the length","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the force applied to the entity by gravitation","","","","","","","","","Returns the acceleration due to gravity towards a mass","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The gravitational constant","It’s important that we don’t compute the gravitational …","Plugin to set up nbody physics","","","","","","Adds the systems for the plugin","Returns the gravitational force between two entities","","","","","Returns the argument unchanged.","","Updates the position of the entity one full step","Updates the locations and velocities of the entities with …","Updates the velocity of the entity one half step","","Calls <code>U::from(self)</code>.","","","","Updates the locations and velocities of the entities …","","","","","","","A clock that can be passed to objects that need to know …","Vectors can be used to represent many things This module …","A clock that can be passed to objects that need to know …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Advances the clock by the given delta and one frame. …","","A world coord vector that is relative to some position in …","A vertex in a mesh Originally from ggez","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Take a mouse coordinate and translate it into a Transform …","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,0,0,0,0,0,0,0,0,0,0,25,27,39,41,28,29,47,25,27,39,41,28,29,47,25,27,39,41,28,29,47,25,27,39,41,28,29,47,25,27,39,41,28,29,47,25,27,27,27,28,29,28,29,28,29,39,41,28,29,47,25,27,39,41,28,29,47,25,27,39,41,28,29,47,25,27,39,41,28,29,47,25,25,25,27,39,41,28,29,47,47,28,29,25,27,39,41,28,29,47,39,41,28,29,47,25,27,39,41,28,29,47,39,41,28,29,47,47,47,27,27,25,27,39,41,28,29,47,25,27,39,41,28,29,47,25,27,39,41,28,29,47,25,27,39,41,28,29,47,25,27,39,41,28,29,47,27,27,47,47,47,25,28,29,25,27,39,41,28,29,47,27,27,25,27,39,41,28,29,47,25,27,39,41,28,29,47,25,27,39,41,28,29,47,25,27,39,41,28,29,47,27,27,25,27,39,41,28,29,47,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,0,69,70,69,70,69,70,69,70,69,70,0,69,70,0,69,70,69,70,69,70,69,70,0,69,70,69,70,69,70,69,70,69,70,69,70,69,70,69,69,70,69,70,69,70,69,70,69,70,69,70,0,0,77,77,73,77,73,77,73,77,73,77,73,77,73,77,77,73,77,73,77,73,77,77,73,77,73,73,77,73,73,77,73,77,73,77,73,77,73,77,73,77,77,77,73,77,73,77,73,77,73,77,73,77,73,0,0,0,0,0,0,0,0,50,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,50,83,50,83,50,83,8,84,85,86,87,50,82,84,85,86,87,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,84,85,86,87,50,83,0,82,8,84,85,86,87,50,83,83,8,84,85,86,87,50,82,8,84,85,86,87,50,83,84,85,86,87,82,8,84,85,86,87,50,50,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,50,50,0,0,82,82,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,8,84,85,86,87,50,83,82,0,0,98,76,98,76,98,76,98,76,98,76,98,76,98,76,98,76,98,76,98,76,76,98,76,98,76,76,98,76,98,76,98,76,98,76,98,76,98,76,98,76,98,76,98,76,98,76,98,76,0,0,100,100,100,100,100,100,100,100,100,100,0,100,100,100,100,100,100,100,0,100,100,100,100,100,0,100,0,0,0,0,0,0,0,0,0,101,0,0,0,102,112,101,102,112,101,102,112,101,102,112,101,102,112,101,102,112,102,112,101,102,112,101,102,112,101,102,112,101,101,102,112,101,102,112,101,102,102,102,102,102,102,112,102,112,101,102,112,101,102,112,101,102,112,101,102,112,101,102,112,102,102,112,102,112,112,102,102,112,101,102,112,101,102,112,101,102,112,101,102,112,101,102,112,101,0,119,117,119,0,0,115,0,117,119,0,117,123,115,117,119,106,123,115,117,119,106,123,115,117,119,106,123,115,117,119,106,123,115,117,119,106,123,106,106,106,123,115,117,119,106,123,115,117,119,106,123,115,117,119,106,123,115,117,119,106,106,106,123,115,117,119,106,115,117,119,123,115,117,119,106,117,115,117,119,117,119,117,119,123,115,117,119,106,123,115,117,119,106,123,115,117,119,106,123,115,117,119,106,123,115,117,119,106,123,123,115,117,119,106,123,115,117,119,106,106,106,123,123,115,117,119,106,123,115,117,119,106,123,115,117,119,106,123,115,117,119,106,123,115,117,119,106,197,197,198,197,198,199,199,200,201,201,200,201,200,201,109,131,131,133,0,0,0,0,0,0,131,133,109,120,122,0,0,109,121,0,120,122,121,109,126,128,128,126,128,0,0,0,0,0,0,126,128,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,125,127,129,130,132,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,126,128,131,133,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,126,128,131,133,125,127,129,130,132,134,125,127,129,130,132,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,125,127,129,130,132,134,120,126,128,122,131,133,125,127,129,130,132,134,125,127,129,130,132,134,125,127,129,130,132,134,125,127,129,130,132,134,125,127,129,130,132,134,125,127,129,130,132,134,125,127,129,130,132,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,109,104,121,120,125,126,127,128,129,122,130,131,132,133,134,0,0,118,116,118,0,0,114,0,0,116,118,0,0,116,137,138,139,140,111,111,114,114,116,116,118,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,111,114,116,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,140,111,137,111,114,116,118,111,114,116,118,111,114,116,118,111,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,111,114,116,118,111,114,116,118,111,114,116,118,111,111,111,111,114,114,114,114,116,116,116,116,118,118,118,118,111,114,116,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,111,114,116,118,137,138,139,140,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,111,137,138,137,138,139,140,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,139,111,137,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,137,138,139,140,111,114,116,118,202,202,203,202,203,204,204,205,206,206,205,206,205,206,0,0,0,0,0,0,0,0,54,48,143,144,146,54,48,143,144,146,54,48,143,144,146,54,48,143,144,146,54,48,143,144,146,48,0,0,0,48,143,144,146,143,144,146,143,144,146,48,143,144,54,48,143,144,146,54,48,143,144,146,54,48,143,144,146,54,48,143,144,146,54,48,143,144,146,54,48,143,144,146,143,144,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,146,146,54,48,143,144,146,54,48,143,144,146,54,48,143,144,146,54,48,143,144,146,54,48,143,144,146,48,48,48,48,48,48,0,48,48,48,48,48,48,48,48,48,48,146,54,143,144,146,54,48,143,144,146,48,54,48,143,144,146,54,48,143,144,146,54,48,143,144,146,48,48,48,54,48,143,144,146,54,48,143,144,146,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,0,0,0,0,0,0,0,0,0,153,150,0,0,0,0,155,155,150,150,155,153,153,150,150,0,150,155,0,0,150,150,150,105,105,154,154,153,155,155,156,150,150,157,159,154,153,155,156,150,157,159,154,153,155,156,150,157,159,155,150,156,157,154,153,155,156,150,157,159,154,153,155,156,150,157,159,105,154,155,156,150,157,154,155,156,150,157,154,155,156,150,157,155,155,154,153,155,150,159,154,153,155,156,150,157,159,154,153,155,156,150,157,159,154,153,155,156,150,157,159,154,153,155,156,150,157,159,155,150,155,150,154,155,150,155,155,155,155,150,150,150,150,154,155,156,150,157,159,154,153,155,156,150,157,159,154,153,155,156,150,157,159,154,153,155,150,159,156,157,105,105,150,105,105,105,105,155,150,156,157,154,153,155,156,150,157,159,154,153,155,156,150,157,159,154,153,155,156,150,157,159,154,153,155,156,150,157,159,154,153,155,156,150,157,159,156,157,155,150,156,157,156,157,154,154,156,157,156,157,156,157,156,157,154,155,105,156,157,154,154,155,156,150,157,154,153,155,156,150,157,159,154,153,155,156,150,157,159,154,153,155,156,150,157,159,105,154,153,155,156,150,157,159,154,153,155,156,150,157,159,154,153,155,156,150,157,159,0,0,0,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,0,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,0,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,0,0,0,0,0,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,0,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,0,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,0,0,0,173,173,0,0,151,172,173,151,172,173,151,172,173,151,172,173,151,172,173,151,172,151,151,151,172,172,172,172,151,173,151,173,151,173,151,151,172,151,172,173,151,172,173,151,172,173,151,172,173,151,172,172,151,173,151,172,173,151,172,173,151,172,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,172,173,151,172,173,151,172,173,151,172,173,151,172,173,151,172,172,151,172,172,172,151,151,172,172,151,172,172,151,172,172,151,173,151,172,173,151,151,172,173,151,172,173,151,172,173,151,172,173,151,172,173,151,151,0,0,177,107,177,107,177,107,177,107,177,107,177,107,177,177,107,107,107,107,177,177,107,177,107,177,107,177,107,177,177,177,177,177,107,177,107,177,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,177,107,177,107,177,107,177,107,177,107,177,177,177,177,177,177,177,107,107,177,177,107,177,107,107,177,107,177,107,177,107,177,107,177,107,0,0,0,0,0,0,179,179,0,178,178,178,0,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,0,0,0,0,0,0,0,141,149,141,149,141,149,141,149,141,149,141,141,149,141,149,141,149,141,149,141,149,141,149,141,149,0,149,149,141,149,141,149,141,141,141,141,141,141,141,149,141,149,141,149,141,149,141,149,141,141,141,141,141,141,141,141,141,141,149,141,149,149,149,141,141,141,149,141,149,141,149,141,149,141,149,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,0,0,0,92,36,40,68,92,36,40,68,92,36,40,68,92,36,40,68,92,36,40,68,68,68,68,68,36,40,92,36,40,68,92,36,40,68,92,36,40,68,92,36,40,68,68,36,40,92,36,40,68,92,36,40,68,92,36,40,92,36,40,68,68,92,36,40,68,92,36,40,68,92,36,40,68,92,36,40,68,92,36,40,68,92,36,40,68,68,36,40,36,40,68,68,92,36,40,68,92,36,40,68,92,36,40,68,92,36,40,68,92,36,40,68,68,92,36,40,68,0,0,0,0,0,0,0,0,185,108,148,53,108,184,108,185,185,108,108,183,183,184,184,186,186,148,148,187,53,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,186,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,53,185,108,183,184,186,148,53,185,108,183,184,186,148,187,53,185,185,185,185,108,108,108,108,183,183,183,183,184,184,184,184,186,186,186,186,148,148,148,148,53,53,53,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,53,185,185,185,108,183,184,186,148,53,148,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,108,184,148,53,108,184,148,53,185,108,183,186,148,53,186,187,183,183,108,108,185,148,53,108,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,185,108,183,184,186,148,187,53,187,185,108,183,184,186,148,187,53,0,0,0,0,0,0,0,0,0,0,56,62,64,188,56,62,64,188,64,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,64,188,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,191,64,188,192,189,56,62,190,191,64,188,192,191,189,56,62,190,191,64,188,192,192,189,64,188,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,56,62,64,188,56,62,64,188,56,64,188,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,189,56,62,190,191,64,188,192,0,0,0,195,195,195,195,195,195,0,195,195,195,195,195,195,0,195,0,195,195,195,195,195,195,195,195,195,195,195,195,0,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,176,176,175,176,175,176,175,176,175,176,175,176,175,176,175,176,175,175,176,175,176,175,176,175,176,175,176,175,176,176,175,176,175,176,175,176,175,176,175,176,175,176,175,176,175,0,176,175,176,176,175,176,175,176,176,176,175,176,175,176,175,176,175,175,176,175],"f":[0,0,[[],1],0,[[2,[5,[[4,[3]]]],[5,[[4,[6]]]],[10,[7,[9,[8]]]],[12,[11]]],1],[[2,[5,[[4,[3]]]],[5,[[4,[6]]]],[12,[11]]],1],0,[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,17],0,[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[-1,-1,[]],[-1,-1,[]],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[25,26],1],[[27,2,[5,[[4,[3]]]],[5,[[4,[6]]]],[12,[11]]],7],0,0,[28,28],[29,29],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[35,[10,[[1,[36,37,38]],[9,[39]]]]],1],[[35,[10,[[1,[40,37,38]],[9,[41]]]]],1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],0,[[28,42],43],[[29,42],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[47,48],[47,48],[[27,49],27],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[[50,51,47],27],[48,47],[[47,52],[[55,[53,54]]]],[[47,52],[[55,[53,54]]]],[[[10,[[1,[7,47,56]]]],[10,[[1,[57,[58,[6]],28]],[9,[29]]]],[5,[[4,[6]]]],[12,[11]],[12,[59]],[12,[60]]],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[27,61],27],0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[[27,62],27],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[63,47],[[63,64],63],0,[[],63],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[63,18],63],0,[[63,18],63],0,[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[63,18],63],0,[[63,18],63],0,[[],63],[[63,18],63],0,[[63,18],63],0,[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,47],[[66,64],66],0,[[],66],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[66,18],66],0,[[66,18],66],0,[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[66,18],66],0,[[66,18],66],0,[[],66],[[66,18],66],0,[[66,18],66],0,[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[67,68],[67,67],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[31,32,-1],1,[[34,[33]]]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[67,42],43],[-1,-1,[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[-1,-1,[]],[[-1,-2],1,[],[[34,[46,45]]]],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[69,26],1],[70,17],0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[2,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[12,[[72,[71]]]],[10,[[1,[57,37,67]],[9,[73]]]],[10,[[1,[57,37,74,8]],[75,[73]]]],[10,[47]],[12,[76]],[12,[59]],[12,[60]]],1],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[77,26],1],[[31,32,-1],1,[[34,[33]]]],[[2,7],7],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[[1,[37,67]],[9,[73]]]],35],1],[18,1],[18,1],[-1,-1,[]],[-1,-1,[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],1,[],[[34,[46,45]]]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[10,[78]],[80,[79]],[10,[37,[9,[73]]]]],1],[[[12,[[72,[81]]]],[10,[67,[9,[73]]]]],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[50,18],-1,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[82,26],1],[50,50],[83,83],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[2,[10,[[1,[7,50]]]],[10,[[1,[57,7,37]],[9,[8]]]],[5,[[72,[81]]]]],1],[[],84],[[],85],[[],86],[[],87],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[[2,[10,[[1,[7,50]]]],[10,[[1,[7,37]],[1,[[9,[8]],[75,[57]]]]]],[5,[[72,[81]]]]],1],[[84,42],43],[[85,42],43],[[86,42],43],[[87,42],43],[[50,42],43],[[83,42],43],[[2,[1,[7,37]],7],1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[90,[[89,[88]]]]],83],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[65,-1,[]],[65,-1,[]],[65,-1,[]],[[2,[10,[[1,[74,91]]]],[10,[[1,[7,92,93,37]]]],[10,[78]]],1],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[[94,[[1,[7,50]]]],[1,[57,7]]],50],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[12,[59]],[12,[[72,[81]]]],[10,[[1,[37,74]]]]],1],[[50,[95,[50]]],50],[[50,[95,[50]]],50],[[96,61],96],[[96,96],49],[[2,[10,[[1,[57,7]],[9,[28]]]],[10,[[1,[7,37]],[9,[8]]]],[80,[83]]],1],[2,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[59]],[80,[97]],[10,[[1,[37,74]]]]],1],0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[98,26],1],[[],76],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[[99,[5,[76]]],1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[100,17],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],0,[-1,-1,[]],[-1,-1,[]],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[18,1],[[101,42],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[102,103,104],[[22,[[19,[105]],106]]]],[[102,103,107,108,18],[[22,[104,106]]]],[[102,109],[[22,[103,101]]]],[[102,109],[[22,[103,101]]]],[[102,103,108,110],[[22,[104,106]]]],0,0,[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[102,-1,[]],[-1,-2,[],[]],[102,49],[102,18],[-1,[[1,[-2,-3]]],[],[],[]],[[111,[55,[53,103]]],102],[112,[[24,[-1]]],[]],[-1,[[113,[-2]]],[],[]],[[102,103,104,[19,[105]],52],[[22,[[19,[105]],106]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[106,106],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[18,1],[18,1],[18,1],[[106,42],43],[[106,42],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[114,[55,[53,103]]],115],[[116,[55,[53,103]]],117],[[118,[55,[53,103]]],119],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[117,108,120],[[22,[[19,[105]],106]]]],[[115,53],[[24,[[1,[103,121]]]]]],[[117,53],[[24,[[1,[103,120]]]]]],[[119,53],[[24,[[1,[103,122]]]]]],[117,18],[119,18],[117,18],[119,18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[123,[[55,[53,103]]]],0,[115,[[55,[53,103]]]],[117,[[55,[53,103]]]],[119,[[55,[53,103]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,124,[]],[-1,51,[]],0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[109,109],[104,104],[121,121],[120,120],[125,125],[126,126],[127,127],[128,128],[129,129],[122,122],[130,130],[131,131],[132,132],[133,133],[134,134],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[[],126],[[],128],[[],131],[[],133],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[[109,42],43],[[104,42],43],[[121,42],43],[[120,42],43],[[125,42],43],[[126,42],43],[[127,42],43],[[128,42],43],[[129,42],43],[[122,42],43],[[130,42],43],[[131,42],43],[[132,42],43],[[133,42],43],[[134,42],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[65,-1,[]],[65,-1,[]],[65,-1,[]],[[125,18],[[24,[120]]]],[[127,18],[[24,[126]]]],[[129,18],[[24,[128]]]],[[130,18],[[24,[122]]]],[[132,18],[[24,[131]]]],[[134,18],[[24,[133]]]],0,0,0,0,0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],125],[[],127],[[],129],[[],130],[[],132],[[],134],[125,18],[127,18],[129,18],[130,18],[132,18],[134,18],0,0,0,0,0,0,[125,[[24,[-1]]],[]],[127,[[24,[-1]]],[]],[129,[[24,[-1]]],[]],[130,[[24,[-1]]],[]],[132,[[24,[-1]]],[]],[134,[[24,[-1]]],[]],[125,[[24,[-1]]],[]],[127,[[24,[-1]]],[]],[129,[[24,[-1]]],[]],[130,[[24,[-1]]],[]],[132,[[24,[-1]]],[]],[134,[[24,[-1]]],[]],[[125,18],[[24,[-1]]],[]],[[127,18],[[24,[-1]]],[]],[[129,18],[[24,[-1]]],[]],[[130,18],[[24,[-1]]],[]],[[132,18],[[24,[-1]]],[]],[[134,18],[[24,[-1]]],[]],[-1,[[113,[-2]]],[],[]],[-1,[[113,[-2]]],[],[]],[-1,[[113,[-2]]],[],[]],[-1,[[113,[-2]]],[],[]],[-1,[[113,[-2]]],[],[]],[-1,[[113,[-2]]],[],[]],[125,[[1,[18,[24,[18]]]]]],[127,[[1,[18,[24,[18]]]]]],[129,[[1,[18,[24,[18]]]]]],[130,[[1,[18,[24,[18]]]]]],[132,[[1,[18,[24,[18]]]]]],[134,[[1,[18,[24,[18]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,135,[]],[-1,135,[]],[-1,135,[]],[-1,135,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[111,111],[114,114],[116,116],[118,118],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[[111,53],49],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[[-1,135],49,[]],[[-1,135],49,[]],[[-1,135],49,[]],[[-1,135],49,[]],[[-1,136],1,[]],[[-1,136],1,[]],[[-1,136],1,[]],[[-1,136],1,[]],[[111,111],49],[[114,114],49],[[116,116],49],[[118,118],49],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[111,42],43],[[114,42],43],[[116,42],43],[[118,42],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[111,-1],1,136],[[114,-1],1,136],[[116,-1],1,136],[[118,-1],1,136],0,0,0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[111,137],[114,138],[116,139],[118,140],0,0,0,[137,[[24,[-1]]],[]],[138,[[24,[-1]]],[]],[139,[[24,[-1]]],[]],[140,[[24,[-1]]],[]],[-1,[[113,[-2]]],[],[]],[-1,[[113,[-2]]],[],[]],[-1,[[113,[-2]]],[],[]],[-1,[[113,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[95,[[141,[[24,[103]]]]]]],56],[[107,18],[[143,[[142,[53]]]]]],[[107,18],[[144,[[142,[53]]]]]],[[107,18],[[143,[[142,[53]]]]]],0,[[[143,[-1]]],[[143,[-1]]],145],[[[144,[-1]]],[[144,[-1]]],145],[146,146],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],0,[[],[[143,[-1]]],147],[[],[[144,[-1]]],147],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[18,1],[18,1],[18,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[65,-1,[]],[[48,53],118],[[48,53],103],[[48,53],103],[[48,53],114],[[48,53],111],[[48,53],116],[48,107],[[48,148],[[19,[105]]]],[48,18],[48,[[55,[53,54]]]],[[48,[94,[[141,[49]]]]],[[55,[53,54]]]],[48,56],[48,18],[48,[[95,[53]]]],[48,[[55,[53,54]]]],0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[48,49],[48,18],[[107,105,105],48],[107,48],[[48,[142,[53]]],[[22,[[1,[[95,[102]],[95,[103]]]],[95,[53]]]]]],[[48,53],[[22,[102,51]]]],[107,146],[[48,52],1],0,[[48,52],1],[[48,[143,[[142,[53]]]],52],1],[[48,[144,[[142,[53]]]],52],1],[[48,52,53],1],0,[48,1],[48,1],[[48,148,[19,[105]],52],1],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[48,1],[[48,103,102],1],[[48,[95,[102]],[95,[103]]],1],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[103,108],[[22,[[19,[105]],149]]]],0,[[],103],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[103,150],1],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[[103,108],[[19,[105]]]],[103,49],[103,151],[103,[[141,[[19,[105]]]]]],[103,52],[[103,108],[[19,[105]]]],[[103,52],49],[103,152],[103,56],0,[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[151,103],[[151,105],103],[[103,107,102,52],1],[[103,107,102,52],1],[[103,102],1],[[103,108,[19,[105]],52],[[19,[105]]]],[[103,108,[19,[105]],52],1],[[103,49],1],[[103,49],[[22,[1,51]]]],[-1,-2,[],[]],0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[105,108,107,103,102,52],153],[[105,52],1],[[154,154],154],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,135,[]],[-1,135,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[105,[[19,[105]]]],[154,154],[155,155],[156,156],[150,150],[157,157],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[[155,155],158],[[-1,-2],158,[],[]],[[],154],[[],153],[[],155],[[],150],[[],159],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[[-1,135],49,[]],[[-1,135],49,[]],[[-1,136],1,[]],[[-1,136],1,[]],[[154,154],49],[[155,155],49],[[150,150],49],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[154,42],43],[[155,42],43],[[156,42],43],[[150,42],43],[[157,42],43],[[159,42],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[65,-1,[]],[65,-1,[]],[65,-1,[]],[65,-1,[]],[[156,18],[[24,[155]]]],[[157,18],[[24,[150]]]],[105,160],[105,154],[150,[[19,[105]]]],[105,52],[[105,64],56],[105,155],[105,150],[[155,-1],1,136],[[150,-1],1,136],0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],156],[[],157],[156,18],[157,18],0,0,[[154,64],56],[[[162,[161]],64],[[162,[161]]]],[156,[[24,[-1]]],[]],[157,[[24,[-1]]],[]],[156,[[24,[-1]]],[]],[157,[[24,[-1]]],[]],[[156,18],[[24,[-1]]],[]],[[157,18],[[24,[-1]]],[]],[-1,[[113,[-2]]],[],[]],[-1,[[113,[-2]]],[],[]],[[154,154],[[24,[158]]]],[[155,155],[[24,[158]]]],[[105,108,107,103,102,52],153],[156,[[1,[18,[24,[18]]]]]],[157,[[1,[18,[24,[18]]]]]],[[154,154],154],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[105,104,103,102,52],153],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[163,108,107,103,102,52],153],[[163,52],1],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[163,[[19,[105]]]],[163,163],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[],163],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[163,42],43],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[163,160],[163,154],[163,52],[163,155],[163,150],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,[[164,108,107,103,102,52],153],[[164,52],1],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[164,[[19,[105]]]],[164,164],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[],164],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[164,42],43],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[164,160],[164,154],[164,52],[164,155],[164,150],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,[[165,108,107,103,102,52],153],[[165,52],1],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[165,[[19,[105]]]],[165,165],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[],165],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[165,42],43],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[165,160],[165,154],[165,52],[165,155],[165,150],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,[[166,108,107,103,102,52],153],[[166,52],1],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[166,[[19,[105]]]],[166,166],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[],166],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[166,42],43],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[166,160],[166,154],[166,52],[166,155],[166,150],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,0,[[105,108,107,103,102,52],153],[[105,108,107,103,102,52],153],0,[[167,108,107,103,102,52],153],[[167,52],1],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[167,[[19,[105]]]],[167,167],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[],167],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[167,42],43],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[167,160],[167,154],[167,52],[167,155],[167,150],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,[[168,108,107,103,102,52],153],[[168,52],1],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[168,[[19,[105]]]],[168,168],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[],168],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[168,42],43],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[168,160],[168,154],[168,52],[168,155],[168,150],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,[[169,108,107,103,102,52],153],[[169,52],1],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[169,[[19,[105]]]],[169,169],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[],169],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[169,42],43],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[169,160],[169,154],[169,52],[169,155],[169,150],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,[[170,108,107,103,102,52],153],[[170,52],1],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[170,[[19,[105]]]],[170,170],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[],170],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[170,42],43],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[170,160],[170,154],[170,52],[170,155],[170,150],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,[[171,108,107,103,102,52],153],[[171,52],1],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[171,[[19,[105]]]],[171,171],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[],171],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[171,42],43],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[171,160],[171,154],[171,52],[171,155],[171,150],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[151,148],[[22,[108,51]]]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[172,151],[151,68],[151,68],[151,68],[[172,64],172],0,[[172,53],172],0,0,[173,173],[151,151],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[[151,148],49],[[],172],[[],151],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[18,1],[[172,18],172],0,0,[[173,42],43],[[151,42],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[65,-1,[]],[151,96],[151,64],[151,53],[151,18],[151,18],[151,18],[151,161],[151,161],[[151,108],148],[[151,173],[[95,[174]]]],[[151,148],108],[151,18],[151,18],[151,18],[151,[[95,[61]]]],[[151,173],[[95,[61]]]],[151,18],[151,18],[151,18],[151,161],[151,161],[[151,173],[[95,[61]]]],[[151,173],[[95,[175]]]],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[172,18],172],0,0,[[],172],[[172,18],172],0,0,[[151,176],[[22,[148,51]]]],[[172,18],172],0,0,[[172,18],172],0,0,[[172,18],172],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[151,18],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[177,107],[[107,148],[[1,[53,108]]]],[[177,64],177],0,[107,107],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[107,18],[[1,[18,18]]]],[[],177],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[[177,18],177],0,[[177,18],177],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[107,64],[[107,53],151],[[107,53],96],[[107,53],161],[[107,53],161],[[107,53],18],[[107,53],18],[[107,53],161],[[107,53],161],[107,[[141,[151]]]],[[107,18],[[22,[[1,[18,18]],51]]]],[[107,18],18],[[107,18],18],[[107,18],161],[[107,18],18],[[107,18],18],[[107,18],18],[[107,18],18],[[107,18],18],[[107,18],161],[107,18],[107,18],[[107,18],[[95,[[141,[151]]]]]],[107,67],[107,18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[177,18],177],0,[[177,18],177],0,[[],177],[[177,18],177],0,0,[[107,176],[[22,[148,148]]]],[[177,18],177],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,18],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[178,178],[179,179],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[[178,178],49],[[179,179],49],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[18,18,18],[[95,[18]]]],[[61,61],61],[18,49],[[110,18],18],[[18,18],49],0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[141,[-1]],108],[[22,[-1,149]]],[]],[[[141,[-1]]],[[141,[-1]]],145],[149,149],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[[[94,[[141,[-1]]]],[94,[[141,[49]]]]],[[95,[[141,[-1]]]]],[147,145]],[[149,42],43],[[149,42],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[141,[-1]],108],-1,[]],[[[141,[-1]]],[[162,[-1]]],[]],[[[141,[-1]]],[[94,[-1]]],[]],[[[141,[-1]]],18,[]],[[[141,[-1]],108],-1,[]],[[[141,[-1]]],18,[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[141,[-1]]],-2,[],[]],[[[141,[-1]]],-2,[],[]],[[[141,[-1]]],[[180,[-1]]],[]],[[[141,[-1]]],[[181,[-1]]],[]],[[18,18],[[141,[-1]]],147],[[18,18,-1],[[141,[-1]]],145],[[18,18,[95,[-1]]],[[141,[-1]]],[]],[[[141,[-1]],108,-1],-1,[]],[[[141,[-1]],108,-1],1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,124,[]],[-1,51,[]],[[[141,[-1]]],18,[]],[[[141,[-1]],108],[[182,[18]]],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[152,152],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[],152],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,[152,14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[68,92],[68,68],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],0,0,[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[],68],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[68,18,18,37,35,160],1],[[36,35,37],1],[[40,35,37],1],[18,1],[18,1],[18,1],[18,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],0,[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[68,[5,[[4,[3]]]]],[[58,[3]]]],0,0,[[68,160],36],[[68,160],40],[[[95,[175]],[95,[174]]],68],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[108,108],108],[[108,183],184],[[108,108],1],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,135,[]],[-1,135,[]],[-1,135,[]],[-1,135,[]],[-1,135,[]],[-1,135,[]],[-1,135,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[185,185],[108,108],[183,183],[184,184],[186,186],[148,148],[187,187],[53,53],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],0,[[],53],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[[-1,135],49,[]],[[-1,135],49,[]],[[-1,135],49,[]],[[-1,135],49,[]],[[-1,135],49,[]],[[-1,135],49,[]],[[-1,135],49,[]],[[-1,136],1,[]],[[-1,136],1,[]],[[-1,136],1,[]],[[-1,136],1,[]],[[-1,136],1,[]],[[-1,136],1,[]],[[-1,136],1,[]],[[185,185],49],[[108,108],49],[[183,183],49],[[184,184],49],[[186,186],49],[[148,148],49],[[187,187],49],[[53,53],49],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[185,42],43],[[108,42],43],[[183,42],43],[[184,42],43],[[186,42],43],[[148,42],43],[[187,42],43],[[53,42],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[185,18],[185,18],[[185,-1],1,136],[[108,-1],1,136],[[183,-1],1,136],[[184,-1],1,136],[[186,-1],1,136],[[148,-1],1,136],[[53,-1],1,136],0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],0,0,0,0,0,0,0,0,[[18,18],185],[[18,18],108],[[110,110],183],[[53,108],186],[[18,18,18],148],[[18,18,18],53],0,0,0,0,[[108,108],108],[[108,108],1],[[185,151],108],[148,108],[53,108],[[108,151],185],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[56,56],56],[[62,62],62],[[64,64],64],[[188,188],188],[[56,56],1],[[62,62],1],[[64,64],1],[[188,188],1],[64,188],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[189,189],[56,56],[62,62],[190,190],[191,191],[64,64],[188,188],[192,192],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[31,32,-1],1,[[34,[33]]]],[[],189],[[],64],[[],188],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[[189,42],43],[[56,42],43],[[62,42],43],[[190,42],43],[[191,42],43],[[64,42],43],[[188,42],43],[[192,42],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[190,191],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[-1,-2],-3,[],[[34,[-1],[[44,[45]]]]],[]],[[56,192],191],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[56,192],[65,-1,[]],[65,-1,[]],[65,-1,[]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[-1,-2],1,[],[[34,[46,45]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[56,56],56],[[62,62],62],[[64,64],64],[[188,188],188],[[56,56],1],[[62,62],1],[[64,64],1],[[188,188],1],[-1,56,[[194,[],[[193,[56]]]]]],[-1,64,[[194,[],[[193,[64]]]]]],[-1,188,[[194,[],[[193,[188]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[195,26],1],[[37,56,37,56],190],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[-1,-1,[]],[-1,-1,[]],[[[1,[7,37,62,56]],161],1],[[[10,[[1,[7,37,62,56]],[9,[189]]]],[12,[59]]],1],[[[1,[7,37,62,56]],[94,[[1,[7,37,62,56]]]],161],1],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[10,[[1,[7,37,62,56]],[75,[189]]]],[10,[[1,[7,37,62,56]],[9,[189]]]],[12,[59]]],1],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[[],52],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[18,1],[[52,42],43],0,[-1,-1,[]],[-1,-1,[]],[65,-1,[]],[52,174],[52,196],[52,196],[[],18],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[59,60],52],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[[52,196],1],[-1,-2,[],[]],0,0,[[176,176],-1,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[-1,[15,[14]]],-2,[],[]],[[-1,[15,[14]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[176,176],[175,175],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,1],[18,1],[[176,176],49],[[175,175],49],[[176,42],43],[[176,42],43],[[175,42],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[19,[-1]]],[[19,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[20,[-1]]],[[20,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[21,[-1]]],[[21,[13]]],[]],[[[10,[78]],79],37],[[161,161],176],0,[[176,176],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,124,[]],[-1,51,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[1,"tuple"],[5,"Commands",4029],[5,"Mesh",4030],[5,"Assets",4031],[5,"ResMut",4032],[5,"ColorMaterial",4033],[5,"Entity",4034],[5,"MainCamera",463],[5,"With",4035],[5,"Query",4036],[5,"AssetServer",4037],[5,"Res",4032],[10,"Any",4038],[5,"Image",4039],[5,"RenderAssets",4040],[5,"EntitiesPluginGroup",6],[5,"PluginGroupBuilder",4041],[1,"usize"],[5,"Box",4042],[5,"Arc",4043],[5,"Rc",4044],[6,"Result",4045],[5,"TypeId",4038],[6,"Option",4046],[5,"CelestialDataPlugin",35],[5,"App",4047],[5,"CelestialBuilder",35],[5,"CelestialChunkIdk",35],[5,"FallingSandMaterial",35],[10,"TypeData",4048],[5,"Components",4049],[5,"Storages",4050],[5,"ComponentId",4049],[10,"FnMut",4051],[5,"Gizmos",4052],[5,"GizmoDrawableLoop",3156],[5,"Transform",4053],[5,"ViewVisibility",4054],[5,"CelestialOutline",35],[5,"GizmoDrawableTriangles",3156],[5,"CelestialWireframe",35],[5,"Formatter",4055],[8,"Result",4055],[17,"Output"],[5,"OwningPtr",4056],[6,"StorageType",4049],[5,"CelestialData",35],[5,"ElementGridDir",1860],[1,"bool"],[5,"CelestialIdx",463],[5,"String",4057],[5,"Clock",3924],[5,"ChunkIjkVector",3277],[5,"Textures",1860],[5,"HashMap",4058],[5,"Mass",3614],[5,"Parent",4059],[6,"Handle",4060],[5,"Time",4061],[5,"FrameCount",4062],[5,"Vec2",4063],[5,"Velocity",3614],[5,"EarthLikeBuilder",242],[5,"Length",3614],[5,"World",4064],[5,"SunBuilder",283],[5,"Radius",324],[5,"OwnedMeshData",3156],[5,"GuiUnifiedPlugin",356],[5,"GuiPluginGroup",356],[6,"MouseButton",4065],[5,"Input",4066],[5,"BrushComponent",408],[5,"Camera2d",4067],[5,"Without",4035],[5,"ElementSelection",703],[5,"BrushPlugin",408],[5,"Window",4068],[5,"CursorMoved",4069],[5,"EventReader",4070],[6,"KeyCode",4071],[5,"CameraPlugin",463],[5,"SelectCelestial",463],[5,"OverlayLayer1",463],[5,"OverlayLayer2",463],[5,"OverlayLayer3",463],[5,"BackgroundLayer1",463],[5,"Down",4072],[5,"Pointer",4072],[5,"ListenerInput",4073],[5,"GlobalTransform",4074],[5,"MeshBoundingBox",3156],[6,"Visibility",4054],[1,"slice"],[5,"Vec",4075],[5,"Rect",4076],[5,"MouseWheel",4065],[5,"ElementPickerPlugin",703],[5,"EguiContexts",4077],[5,"PhysicsPluginGroup",753],[6,"GetChunkErr",790],[5,"ElementGridConvolutionNeighbors",790],[5,"ElementGrid",2038],[5,"ConvolutionIdx",1041],[10,"Element",2097],[5,"ConvOutOfBoundsError",879],[5,"CoordinateDir",2877],[5,"JkVector",3277],[6,"ConvolutionIdentifier",1041],[1,"isize"],[5,"ElementGridConvolutionNeighborIdxs",1563],[5,"ElementGridConvolutionNeighborsIntoIter",790],[5,"IterBridge",4078],[6,"LeftRightNeighborIdxs",1563],[6,"LeftRightNeighborGrids",879],[6,"TopNeighborIdxs",1563],[6,"TopNeighborGrids",879],[6,"BottomNeighborIdxs",1563],[6,"BottomNeighborGrids",879],[6,"TopNeighborIdentifier",1041],[6,"LeftRightNeighborIdentifier",1041],[6,"BottomNeighborIdentifier",1041],[5,"ElementGridConvolutionNeighborGrids",879],[5,"SmolStr",4079],[5,"TopNeighborIdentifierIter",1041],[6,"TopNeighborIdentifierNormal",1041],[5,"TopNeighborIdentifierNormalIter",1041],[6,"TopNeighborIdentifierChunkDoubling",1041],[5,"TopNeighborIdentifierChunkDoublingIter",1041],[5,"BottomNeighborIdentifierIter",1041],[6,"BottomNeighborIdentifierNormal",1041],[5,"BottomNeighborIdentifierNormalIter",1041],[6,"BottomNeighborIdentifierChunkDoubling",1041],[5,"BottomNeighborIdentifierChunkDoublingIter",1041],[10,"DynEq",4080],[10,"Hasher",4081],[5,"ElementGridConvolutionNeighborIdxsIter",1563],[5,"LeftRightNeighborIdxsIter",1563],[5,"TopNeighborIdxsIter",1563],[5,"BottomNeighborIdxsIter",1563],[5,"Grid",3047],[5,"HashSet",4082],[5,"Parallel",1860],[5,"Sequential",1860],[10,"Clone",4083],[5,"ProcessTargets",1860],[10,"Default",4084],[5,"IjkVector",3277],[5,"GridOutOfBoundsError",3047],[6,"ElementType",2097],[5,"ChunkCoords",2736],[5,"RawImage",3124],[6,"ElementTakeOptions",2097],[5,"Density",2097],[6,"StateOfMatter",2097],[5,"StateOfMatterIter",2097],[5,"ElementTypeIter",2097],[6,"Ordering",4085],[5,"SetHeatOnZeroSpecificHeatError",2097],[6,"Color",4086],[1,"f32"],[8,"Array2",4087],[5,"DownFlier",2379],[5,"LeftFlier",2418],[5,"RightFlier",2457],[5,"Lava",2496],[5,"Sand",2539],[5,"SolarPlasma",2578],[5,"Stone",2617],[5,"Vacuum",2656],[5,"Water",2695],[5,"PartialLayerChunkCoordsBuilder",2736],[6,"VertexMode",2736],[1,"u32"],[5,"Vertex",3961],[5,"RelXyPoint",3961],[5,"CoordinateDirBuilder",2877],[6,"MeshDrawMode",2981],[6,"ZoomDrawMode",2981],[5,"Iter",4088],[5,"IterMut",4088],[1,"array"],[5,"RelJkVector",3277],[5,"TempJkVector",3277],[5,"NdArrayCoords",3277],[5,"FullIdx",3277],[5,"Vertex",3277],[5,"Area",3614],[5,"GravitationalField",3614],[5,"ForceVec",3614],[5,"Force",3614],[5,"GravitationalAcceleration",3614],[17,"Item"],[10,"Iterator",4089],[5,"NBodyPlugin",3891],[5,"Duration",4090],[15,"Normal",1027],[15,"ChunkDoubling",1027],[15,"LR",1032],[15,"Normal",1034],[15,"ChunkDoubling",1034],[15,"Normal",1844],[15,"ChunkDoubling",1844],[15,"LR",1849],[15,"Normal",1851],[15,"ChunkDoubling",1851]],"b":[[940,"impl-Display-for-ConvOutOfBoundsError"],[941,"impl-Debug-for-ConvOutOfBoundsError"],[3075,"impl-Debug-for-GridOutOfBoundsError"],[3076,"impl-Display-for-GridOutOfBoundsError"],[3097,"impl-IntoIterator-for-%26Grid%3CT%3E"],[3098,"impl-IntoIterator-for-%26mut+Grid%3CT%3E"],[3991,"impl-Display-for-RelXyPoint"],[3992,"impl-Debug-for-RelXyPoint"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
