name: Rust

on:
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
    - uses: actions/checkout@v3

    - name: Install rustup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install dependencies
      run: sudo apt-get install -y libasound2-dev libusb-1.0-0-dev libftdi1-dev libudev-dev

    - name: Install cargo fmt, clippy
      run: rustup component add rustfmt clippy

    - name: Check Code Formatting
      run: cargo fmt -- --check

    - name: Check Code Linting
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build
      run: cargo build --verbose

    # - name: Generate Documentation
    #   run: cargo doc --no-deps --document-private-items --all-features

    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Run tests and collect coverage
      run: cargo tarpaulin --out Xml > coverage_output.txt
      continue-on-error: true

    - name: Run benching just so we know we haven't broken it
      run: cargo bench

    - name: Comment PR with coverage output
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const coverageOutput = fs.readFileSync('coverage_output.txt', 'utf-8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Test Coverage Output:\n\`\`\`\n${coverageOutput}\n\`\`\``
          });